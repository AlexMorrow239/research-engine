@use "sass:color";

// Flexbox mixins
@mixin flex(
  $direction: row,
  $justify: flex-start,
  $align: stretch,
  $wrap: nowrap
) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
  flex-wrap: $wrap;
}

@mixin flex-center {
  display: flex;
  justify-content: center;
  align-items: center;
}

// Media queries
@mixin respond-to($breakpoint, $direction: "up") {
  @if $direction == "down" {
    @if $breakpoint == "sm" {
      @media (max-width: 639px) {
        @content;
      }
    } @else if $breakpoint == "md" {
      @media (max-width: 767px) {
        @content;
      }
    } @else if $breakpoint == "lg" {
      @media (max-width: 1023px) {
        @content;
      }
    } @else if $breakpoint == "xl" {
      @media (max-width: 1279px) {
        @content;
      }
    }
  } @else {
    @if $breakpoint == "sm" {
      @media (min-width: 640px) {
        @content;
      }
    } @else if $breakpoint == "md" {
      @media (min-width: 768px) {
        @content;
      }
    } @else if $breakpoint == "lg" {
      @media (min-width: 1024px) {
        @content;
      }
    } @else if $breakpoint == "xl" {
      @media (min-width: 1280px) {
        @content;
      }
    }
  }
}

// Typography mixins
@mixin font-style($weight: "regular", $style: normal) {
  font-family: var(--font-primary);
  font-weight: var(--font-weight-#{$weight});
  font-style: $style;
}

@mixin heading($size: "base") {
  font-family: var(--font-secondary);
  font-size: var(--font-size-#{$size});
  line-height: var(--line-height-tight);
  font-weight: var(--font-weight-bold);
}

// Button mixins
@mixin button-base {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  border: none;
  border-radius: var(--border-radius);
  cursor: pointer;
  font-weight: var(--font-weight-medium);
  text-decoration: none;
  transition: all var(--transition-base);

  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
  }
}

@mixin button-variant($bg-color, $text-color) {
  background-color: var(#{$bg-color});
  color: var(#{$text-color});
  transition: filter 0.2s ease-in-out;

  &:hover {
    filter: brightness(0.9);
  }

  &:active {
    filter: brightness(0.8);
  }
}

// Card and container mixins
@mixin card-base {
  background-color: var(--color-background);
  border-radius: var(--border-radius-lg);
  box-shadow: 0 2px 4px var(--shadow-sm);
  padding: var(--spacing-md);
}

// Container mixin
@mixin container {
  width: 100%;
  max-width: var(--max-width);
  margin-left: auto;
  margin-right: auto;
  padding-left: var(--spacing-md);
  padding-right: var(--spacing-md);
}

// Input mixins
@mixin input-base {
  height: var(--input-height);
  padding: var(--input-padding);
  border: 1px solid var(--color-border-input);
  border-radius: var(--border-radius-sm);
  background-color: var(--color-background-input);
  font-size: var(--font-size-base);
  transition: var(--transition-fast);

  &:focus {
    border-color: var(--color-primary);
    outline: none;
    box-shadow: 0 0 0 2px var(--color-primary-transparent);
  }
}

// Position mixins
@mixin position-absolute($top: null, $right: null, $bottom: null, $left: null) {
  position: absolute;
  top: $top;
  right: $right;
  bottom: $bottom;
  left: $left;
}

@mixin center-absolute {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

// Grid mixins
@mixin grid($columns: 1, $gap: "md") {
  display: grid;
  grid-template-columns: repeat($columns, 1fr);
  gap: var(--spacing-#{$gap});
}

// Animation mixins
@mixin fade-in($duration: 0.3s) {
  animation: fadeIn $duration ease-in;

  @keyframes fadeIn {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }
}

// Shadow mixins
@mixin shadow($size: "sm") {
  box-shadow: 0 2px 4px var(--shadow-#{$size});
}

// Text truncation
@mixin truncate($lines: 1) {
  @if $lines == 1 {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  } @else {
    display: -webkit-box;
    -webkit-line-clamp: $lines;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
}
